


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_CMSDK_CM0.s
    3 00000000         ; * @brief    CMSIS Cortex-M0 Core Device Startup File f
                       or
    4 00000000         ; *           Device CMSDK_CM0
    5 00000000         ; * @version  V3.01
    6 00000000         ; * @date     06. March 2012
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2012 ARM Limited. All rights reserved.
                       
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         ;/*
   25 00000000         ;//-------- <<< Use Configuration Wizard in Context Menu
                        >>> ------------------
   26 00000000         ;*/
   27 00000000         
   28 00000000         
   29 00000000         ; <h> Stack Configuration
   30 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   31 00000000         ; </h>
   32 00000000         
   33 00000000 00000400 
                       Stack_Size
                               EQU              0x00000400
   34 00000000         
   35 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=4
   36 00000000         Stack_Mem
                               SPACE            Stack_Size
   37 00000400         __initial_sp
   38 00000400         
   39 00000400         
   40 00000400         ; <h> Heap Configuration
   41 00000400         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   42 00000400         ; </h>
   43 00000400         



ARM Macro Assembler    Page 2 


   44 00000400 00000400 
                       Heap_Size
                               EQU              0x00000400
   45 00000400         
   46 00000400                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
4
   47 00000000         __heap_base
   48 00000000         Heap_Mem
                               SPACE            Heap_Size
   49 00000400         __heap_limit
   50 00000400         
   51 00000400         
   52 00000400                 PRESERVE8
   53 00000400                 THUMB
   54 00000400         
   55 00000400         
   56 00000400         ; Vector Table Mapped to Address 0 at Reset
   57 00000400         
   58 00000400                 AREA             RESET, DATA, READONLY
   59 00000000                 EXPORT           __Vectors
   60 00000000         
   61 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   62 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   63 00000008 00000000        DCD              0           ; NMI Handler
   64 0000000C 00000000        DCD              0           ; Hard Fault Handle
                                                            r
   65 00000010 00000000        DCD              0           ; Reserved
   66 00000014 00000000        DCD              0           ; Reserved
   67 00000018 00000000        DCD              0           ; Reserved
   68 0000001C 00000000        DCD              0           ; Reserved
   69 00000020 00000000        DCD              0           ; Reserved
   70 00000024 00000000        DCD              0           ; Reserved
   71 00000028 00000000        DCD              0           ; Reserved
   72 0000002C 00000000        DCD              0           ; SVCall Handler
   73 00000030 00000000        DCD              0           ; Reserved
   74 00000034 00000000        DCD              0           ; Reserved
   75 00000038 00000000        DCD              0           ; PendSV Handler
   76 0000003C 00000000        DCD              0           ; SysTick Handler
   77 00000040 00000000        DCD              Keyboard_Handler ; IRQ0 Handler
                                                            
   78 00000044         
   79 00000044         
   80 00000044                 AREA             |.text|, CODE, READONLY
   81 00000000         
   82 00000000         
   83 00000000         ; Reset Handler
   84 00000000         
   85 00000000         Reset_Handler
                               PROC
   86 00000000                 GLOBAL           Reset_Handler
   87 00000000                 ENTRY
   88 00000000                 IMPORT           __main
   89 00000000 4806            LDR              R0, =__main
   90 00000002 4680            MOV              R8, R0
   91 00000004 46C1            MOV              R9, R8
   92 00000006 4700            BX               R0
   93 00000008                 ENDP



ARM Macro Assembler    Page 3 


   94 00000008         
   95 00000008         Keyboard_Handler
                               PROC
   96 00000008                 EXPORT           Keyboard_Handler   [WEAK]
   97 00000008                 IMPORT           KEY_ISR
   98 00000008 B507            PUSH             {R0, R1, R2 ,LR}
   99 0000000A F7FF FFFE       BL               KEY_ISR
  100 0000000E BD07            POP              {R0, R1, R2, PC}
  101 00000010                 ENDP
  102 00000010         
  103 00000010         
  104 00000010         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  105 00000010         
  106 00000010         
  107 00000010                 ALIGN            4
  108 00000010         
  109 00000010                 IF               :DEF:__MICROLIB
  116 00000010         
  117 00000010                 IMPORT           __use_two_region_memory
  118 00000010                 EXPORT           __user_initial_stackheap
  119 00000010         
  120 00000010         __user_initial_stackheap
  121 00000010         
  122 00000010 4803            LDR              R0, =  Heap_Mem
  123 00000012 4904            LDR              R1, =(Stack_Mem + Stack_Size)
  124 00000014 4A04            LDR              R2, = (Heap_Mem +  Heap_Size)
  125 00000016 4B05            LDR              R3, = Stack_Mem
  126 00000018 4770            BX               LR
  127 0000001A         
  128 0000001A 00 00           ALIGN
  129 0000001C         
  130 0000001C                 ENDIF
  131 0000001C         
  132 0000001C                 END
              00000000 
              00000000 
              00000400 
              00000400 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\startup_cmsdk_cm0.d -o.\startup_cmsdk_cm0.o -I.\RTE\_Target_1 -I
D:\Keil_v5\ARM\PACK\Keil\V2M-MPS2_CMx_BSP\1.8.1\Device\CMSDK_CM0\Include -ID:\K
eil_v5\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 525" --predefine="
CMSDK_CM0 SETA 1" --list=.\listings\startup_cmsdk_cm0.lst startup_CMSDK_CM0.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 35 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 36 in file startup_CMSDK_CM0.s
   Uses
      At line 123 in file startup_CMSDK_CM0.s
      At line 125 in file startup_CMSDK_CM0.s

__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 37 in file startup_CMSDK_CM0.s
   Uses
      At line 61 in file startup_CMSDK_CM0.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 46 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 48 in file startup_CMSDK_CM0.s
   Uses
      At line 122 in file startup_CMSDK_CM0.s
      At line 124 in file startup_CMSDK_CM0.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 47 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000400

Symbol: __heap_limit
   Definitions
      At line 49 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 58 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 61 in file startup_CMSDK_CM0.s
   Uses
      At line 59 in file startup_CMSDK_CM0.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 80 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: .text unused
Keyboard_Handler 00000008

Symbol: Keyboard_Handler
   Definitions
      At line 95 in file startup_CMSDK_CM0.s
   Uses
      At line 77 in file startup_CMSDK_CM0.s
      At line 96 in file startup_CMSDK_CM0.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 85 in file startup_CMSDK_CM0.s
   Uses
      At line 62 in file startup_CMSDK_CM0.s
      At line 86 in file startup_CMSDK_CM0.s

__user_initial_stackheap 00000010

Symbol: __user_initial_stackheap
   Definitions
      At line 120 in file startup_CMSDK_CM0.s
   Uses
      At line 118 in file startup_CMSDK_CM0.s
Comment: __user_initial_stackheap used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap_Size 00000400

Symbol: Heap_Size
   Definitions
      At line 44 in file startup_CMSDK_CM0.s
   Uses
      At line 48 in file startup_CMSDK_CM0.s
      At line 124 in file startup_CMSDK_CM0.s

Stack_Size 00000400

Symbol: Stack_Size
   Definitions
      At line 33 in file startup_CMSDK_CM0.s
   Uses
      At line 36 in file startup_CMSDK_CM0.s
      At line 123 in file startup_CMSDK_CM0.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

KEY_ISR 00000000

Symbol: KEY_ISR
   Definitions
      At line 97 in file startup_CMSDK_CM0.s
   Uses
      At line 99 in file startup_CMSDK_CM0.s
Comment: KEY_ISR used once
__main 00000000

Symbol: __main
   Definitions
      At line 88 in file startup_CMSDK_CM0.s
   Uses
      At line 89 in file startup_CMSDK_CM0.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 117 in file startup_CMSDK_CM0.s
   Uses
      None
Comment: __use_two_region_memory unused
3 symbols
354 symbols in table
